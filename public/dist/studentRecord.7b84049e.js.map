{"mappings":"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","sources":["<anon>","studentRecord.js"],"sourcesContent":["const form = document.querySelector(\".drop-zone\");\nconst fileInput = form.querySelector(\".file-input\");\nconst formText = document.querySelector(\".form-text\");\nconst uploadLogo = document.querySelector(\".fa-cloud-arrow-up\");\nconst fileUploadOngoing = document.querySelector(\".ongoing\");\nconst fileName = document.querySelector(\".file-name\");\nconst fileSize = document.querySelector(\".size\");\nconst loadingIcon = document.querySelector(\".fa-spinner\");\nconst completeIcon = document.querySelector(\".fa-square-check\");\nconst dragDropContainer = document.querySelector(\".drag-drop-container\");\nconst studentRecordContainer = document.querySelector(\".student-record-container\");\nconst pages = document.querySelectorAll(\".page\");\nconst nextBtn = document.querySelector(\".next\");\nconst previousBtn = document.querySelector(\".prev\");\nconst main = document.querySelector(\".main\");\nconst filterContainer = document.querySelector(\".filter-container\");\nconst deleteBtn = document.querySelector(\".delete-btn\");\nform.addEventListener(\"click\", ()=>{\n    fileInput.click();\n});\nfileInput.onchange = ({ target })=>{\n    handleFile(target.files[0]);\n};\nform.addEventListener(\"dragover\", (e)=>{\n    e.preventDefault();\n    uploadLogo.classList.add(\"uploading\");\n    formText.textContent = \"Drop the file\";\n});\nform.addEventListener(\"dragleave\", ()=>{\n    uploadLogo.classList.remove(\"uploading\");\n    formText.textContent = \"Browse File to Upload\";\n});\nform.addEventListener(\"drop\", (e)=>{\n    e.preventDefault();\n    uploadLogo.classList.remove(\"uploading\");\n    formText.textContent = \"Browse File to Upload\";\n    const files = e.dataTransfer.files;\n    if (files.length > 0) handleFile(files[0]);\n});\nconst handleFile = (file)=>{\n    if (file) {\n        fileUploadOngoing.classList.add(\"active\");\n        fileName.textContent = `${file.name} \\u{2022} Uploading`;\n        loadingIcon.classList.remove(\"remove\");\n    }\n    upload(file);\n};\nconst upload = async (file)=>{\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n        const response = await fetch(\"/app/api/upload\", {\n            method: \"POST\",\n            body: formData\n        });\n        if (response.ok) {\n            const data = await response.json();\n            fileName.textContent = `${file.name} \\u{2022} Uploaded`;\n            fileSize.textContent = `${Math.round(file.size / 1024)} KB`;\n            completeIcon.classList.remove(\"remove\");\n            loadingIcon.classList.add(\"remove\");\n            setTimeout(()=>{\n                dragDropContainer.classList.add(\"remove\");\n                main.classList.remove(\"blurred\");\n                displayStudentRecord();\n            }, 3000);\n        } else throw new Error(\"There was an error uploading the file.\");\n    } catch (err) {\n        fileName.textContent = `${file.name} \\u{2022} Error`;\n        console.error(err);\n    }\n};\nlet studentQuery = \"\", yearLevelQuery = \"\", courseQuery = \"\";\nfilterContainer.addEventListener(\"submit\", (event)=>{\n    event.preventDefault();\n    const formData = new FormData(filterContainer);\n    const data = Object.fromEntries(formData.entries());\n    studentQuery = data.studentNumber ? `studentNumber=${data.studentNumber}&` : \"\";\n    yearLevelQuery = data.yearLevel ? `yearLevel=${data.yearLevel}&` : \"\";\n    courseQuery = data.course ? `course=${data.course}&` : \"\";\n    displayStudentRecord(studentQuery, yearLevelQuery, courseQuery);\n});\ndeleteBtn.addEventListener(\"click\", async (event)=>{\n    event.preventDefault();\n    try {\n        const response = await fetch(\"/app/api/delete-record\");\n        if (!response.ok) throw new Error(\"Failed to delete record\");\n        const data = await response.json();\n        setTimeout(()=>dragDropContainer.classList.remove(\"remove\"), 2000);\n    } catch (err) {\n        console.error(err);\n    }\n});\nconst studentRecordAppend = (student)=>{\n    return `\r\n    <div class=\"student-record\">\r\n        <p>\r\n            Student Number: <span class=\"studentNumber\">${student.studentNumber}</span>\r\n        </p>\r\n        <div class=\"fullname\">\r\n            <p>Surname: <span class=\"surname\">${student.surname}</span></p>\r\n            <p>First name: <span class=\"firstname\">${student.firstname}</span></p>\r\n            <p>Middle name: <span class=\"middlename\">${student.middlename || \"\"}</span></p>\r\n            <p>Extension: <span class=\"extension\">${student.extension || \"\"}</span></p>\r\n        </div>\r\n\r\n        <p>Course: <span class=\"course\">${student.course}</span></p>\r\n        <p>Year Level: <span class=\"course\">${student.yearLevel}</span></p>\r\n        <p>\r\n            Email:\r\n            <span class=\"email\">${student.email}</span>\r\n        </p>\r\n        <p>Status: <span class=\"enrollStatus\">${student.isEnrolled ? \"Enrolled\" : \"Not Enrolled\"}</span></p>\r\n        <p>Date enrolled: <span class=\"date-enrolled\">${student.isEnrolledAt ? student.isEnrolledAt.split(\"T\")[0] : \"\"}</span></p>\r\n    </div>`;\n};\nlet totalPages;\nconst displayStudentRecord = async (student = \"\", yearLevel = \"\", course = \"\", page = 1)=>{\n    try {\n        studentRecordContainer.innerHTML = \"\";\n        const response = await fetch(`/app/api/getAllStudents?${student}${yearLevel}${course}page=${page}`);\n        if (!response.ok) throw new Error(response.message);\n        const data = await response.json();\n        if (!data.totalStudents) {\n            dragDropContainer.classList.remove(\"remove\");\n            main.classList.add(\"blurred\");\n        } else {\n            const students = data.data;\n            totalPages = data.pages;\n            students.forEach((student)=>{\n                const studentRecord = studentRecordAppend(student);\n                studentRecordContainer.insertAdjacentHTML(\"beforeend\", studentRecord);\n            });\n        }\n    } catch (err) {\n        console.error(err);\n    }\n};\nlet start = 1;\nlet end = 3;\nlet currentPage = 1;\nconst renderPagination = ()=>{\n    pages.forEach((page, index)=>{\n        page.textContent = start + index;\n        page.dataset.page = start + index;\n    });\n    previousBtn.disabled = start === 1;\n    nextBtn.disabled = end === totalPages;\n    displayStudentRecord(studentQuery, yearLevelQuery, courseQuery, currentPage);\n};\npages.forEach((page)=>{\n    page.addEventListener(\"click\", (event)=>{\n        currentPage = parseInt(event.target.dataset.page);\n        if (currentPage === end && end < totalPages) {\n            start++;\n            end++;\n        } else if (currentPage === start && start > 1) {\n            start--;\n            end--;\n        }\n        renderPagination();\n    });\n});\npreviousBtn.addEventListener(\"click\", ()=>{\n    if (start > 1) {\n        start--;\n        currentPage--;\n        end--;\n    }\n    renderPagination();\n});\nnextBtn.addEventListener(\"click\", ()=>{\n    if (end < totalPages) {\n        start++;\n        currentPage++;\n        end++;\n    }\n    renderPagination();\n});\nif (dragDropContainer.classList.contains(\"remove\")) displayStudentRecord();\n\n//# sourceMappingURL=studentRecord.7b84049e.js.map\n","const form = document.querySelector(\".drop-zone\");\r\nconst fileInput = form.querySelector(\".file-input\");\r\nconst formText = document.querySelector(\".form-text\");\r\nconst uploadLogo = document.querySelector(\".fa-cloud-arrow-up\");\r\nconst fileUploadOngoing = document.querySelector(\".ongoing\");\r\nconst fileName = document.querySelector(\".file-name\");\r\nconst fileSize = document.querySelector(\".size\");\r\nconst loadingIcon = document.querySelector(\".fa-spinner\");\r\nconst completeIcon = document.querySelector(\".fa-square-check\");\r\nconst dragDropContainer = document.querySelector(\".drag-drop-container\");\r\nconst studentRecordContainer = document.querySelector(\r\n  \".student-record-container\"\r\n);\r\nconst pages = document.querySelectorAll(\".page\");\r\nconst nextBtn = document.querySelector(\".next\");\r\nconst previousBtn = document.querySelector(\".prev\");\r\nconst main = document.querySelector(\".main\");\r\nconst filterContainer = document.querySelector(\".filter-container\");\r\nconst deleteBtn = document.querySelector(\".delete-btn\");\r\n\r\nform.addEventListener(\"click\", () => {\r\n  fileInput.click();\r\n});\r\n\r\nfileInput.onchange = ({ target }) => {\r\n  handleFile(target.files[0]);\r\n};\r\n\r\nform.addEventListener(\"dragover\", (e) => {\r\n  e.preventDefault();\r\n  uploadLogo.classList.add(\"uploading\");\r\n  formText.textContent = \"Drop the file\";\r\n});\r\n\r\nform.addEventListener(\"dragleave\", () => {\r\n  uploadLogo.classList.remove(\"uploading\");\r\n  formText.textContent = \"Browse File to Upload\";\r\n});\r\n\r\nform.addEventListener(\"drop\", (e) => {\r\n  e.preventDefault();\r\n  uploadLogo.classList.remove(\"uploading\");\r\n  formText.textContent = \"Browse File to Upload\";\r\n\r\n  const files = e.dataTransfer.files;\r\n  if (files.length > 0) {\r\n    handleFile(files[0]);\r\n  }\r\n});\r\n\r\nconst handleFile = (file) => {\r\n  if (file) {\r\n    fileUploadOngoing.classList.add(\"active\");\r\n    fileName.textContent = `${file.name} • Uploading`;\r\n    loadingIcon.classList.remove(\"remove\");\r\n  }\r\n\r\n  upload(file);\r\n};\r\n\r\nconst upload = async (file) => {\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n\r\n  try {\r\n    const response = await fetch(\"/app/api/upload\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      fileName.textContent = `${file.name} • Uploaded`;\r\n      fileSize.textContent = `${Math.round(file.size / 1024)} KB`;\r\n      completeIcon.classList.remove(\"remove\");\r\n      loadingIcon.classList.add(\"remove\");\r\n\r\n      setTimeout(() => {\r\n        dragDropContainer.classList.add(\"remove\");\r\n        main.classList.remove(\"blurred\");\r\n        displayStudentRecord();\r\n      }, 3000);\r\n    } else throw new Error(\"There was an error uploading the file.\");\r\n  } catch (err) {\r\n    fileName.textContent = `${file.name} • Error`;\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nlet studentQuery = \"\",\r\n  yearLevelQuery = \"\",\r\n  courseQuery = \"\";\r\n\r\nfilterContainer.addEventListener(\"submit\", (event) => {\r\n  event.preventDefault();\r\n\r\n  const formData = new FormData(filterContainer);\r\n  const data = Object.fromEntries(formData.entries());\r\n\r\n  studentQuery = data.studentNumber\r\n    ? `studentNumber=${data.studentNumber}&`\r\n    : \"\";\r\n  yearLevelQuery = data.yearLevel ? `yearLevel=${data.yearLevel}&` : \"\";\r\n  courseQuery = data.course ? `course=${data.course}&` : \"\";\r\n\r\n  displayStudentRecord(studentQuery, yearLevelQuery, courseQuery);\r\n});\r\n\r\ndeleteBtn.addEventListener(\"click\", async (event) => {\r\n  event.preventDefault();\r\n  try {\r\n    const response = await fetch(\"/app/api/delete-record\");\r\n\r\n    if (!response.ok) throw new Error(\"Failed to delete record\");\r\n    const data = await response.json();\r\n\r\n    setTimeout(() => dragDropContainer.classList.remove(\"remove\"), 2000);\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n});\r\n\r\nconst studentRecordAppend = (student) => {\r\n  return `\r\n    <div class=\"student-record\">\r\n        <p>\r\n            Student Number: <span class=\"studentNumber\">${\r\n              student.studentNumber\r\n            }</span>\r\n        </p>\r\n        <div class=\"fullname\">\r\n            <p>Surname: <span class=\"surname\">${student.surname}</span></p>\r\n            <p>First name: <span class=\"firstname\">${\r\n              student.firstname\r\n            }</span></p>\r\n            <p>Middle name: <span class=\"middlename\">${\r\n              student.middlename || \"\"\r\n            }</span></p>\r\n            <p>Extension: <span class=\"extension\">${\r\n              student.extension || \"\"\r\n            }</span></p>\r\n        </div>\r\n\r\n        <p>Course: <span class=\"course\">${student.course}</span></p>\r\n        <p>Year Level: <span class=\"course\">${student.yearLevel}</span></p>\r\n        <p>\r\n            Email:\r\n            <span class=\"email\">${student.email}</span>\r\n        </p>\r\n        <p>Status: <span class=\"enrollStatus\">${\r\n          student.isEnrolled ? \"Enrolled\" : \"Not Enrolled\"\r\n        }</span></p>\r\n        <p>Date enrolled: <span class=\"date-enrolled\">${\r\n          student.isEnrolledAt ? student.isEnrolledAt.split(\"T\")[0] : \"\"\r\n        }</span></p>\r\n    </div>`;\r\n};\r\nlet totalPages;\r\nconst displayStudentRecord = async (\r\n  student = \"\",\r\n  yearLevel = \"\",\r\n  course = \"\",\r\n  page = 1\r\n) => {\r\n  try {\r\n    studentRecordContainer.innerHTML = \"\";\r\n    const response = await fetch(\r\n      `/app/api/getAllStudents?${student}${yearLevel}${course}page=${page}`\r\n    );\r\n    if (!response.ok) throw new Error(response.message);\r\n\r\n    const data = await response.json();\r\n    if (!data.totalStudents) {\r\n      dragDropContainer.classList.remove(\"remove\");\r\n      main.classList.add(\"blurred\");\r\n    } else {\r\n      const students = data.data;\r\n      totalPages = data.pages;\r\n\r\n      students.forEach((student) => {\r\n        const studentRecord = studentRecordAppend(student);\r\n        studentRecordContainer.insertAdjacentHTML(\"beforeend\", studentRecord);\r\n      });\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nlet start = 1;\r\nlet end = 3;\r\nlet currentPage = 1;\r\nconst renderPagination = () => {\r\n  pages.forEach((page, index) => {\r\n    page.textContent = start + index;\r\n    page.dataset.page = start + index;\r\n  });\r\n\r\n  previousBtn.disabled = start === 1;\r\n  nextBtn.disabled = end === totalPages;\r\n  displayStudentRecord(studentQuery, yearLevelQuery, courseQuery, currentPage);\r\n};\r\n\r\npages.forEach((page) => {\r\n  page.addEventListener(\"click\", (event) => {\r\n    currentPage = parseInt(event.target.dataset.page);\r\n\r\n    if (currentPage === end && end < totalPages) {\r\n      start++;\r\n      end++;\r\n    } else if (currentPage === start && start > 1) {\r\n      start--;\r\n      end--;\r\n    }\r\n\r\n    renderPagination();\r\n  });\r\n});\r\n\r\npreviousBtn.addEventListener(\"click\", () => {\r\n  if (start > 1) {\r\n    start--;\r\n    currentPage--;\r\n    end--;\r\n  }\r\n\r\n  renderPagination();\r\n});\r\n\r\nnextBtn.addEventListener(\"click\", () => {\r\n  if (end < totalPages) {\r\n    start++;\r\n    currentPage++;\r\n    end++;\r\n  }\r\n\r\n  renderPagination();\r\n});\r\n\r\nif (dragDropContainer.classList.contains(\"remove\")) displayStudentRecord();\r\n"],"names":["totalPages","form","document","querySelector","fileInput","formText","uploadLogo","fileUploadOngoing","fileName","fileSize","loadingIcon","completeIcon","dragDropContainer","studentRecordContainer","pages","querySelectorAll","nextBtn","previousBtn","main","filterContainer","deleteBtn","addEventListener","click","onchange","target","handleFile","files","e","preventDefault","classList","add","textContent","remove","dataTransfer","length","file","name","upload","formData","FormData","append","response","fetch","method","body","ok","json","Math","round","size","setTimeout","displayStudentRecord","Error","err","console","error","studentQuery","yearLevelQuery","courseQuery","event","data","Object","fromEntries","entries","studentNumber","yearLevel","course","studentRecordAppend","student","surname","firstname","middlename","extension","email","isEnrolled","isEnrolledAt","split","page","innerHTML","message","totalStudents","students","forEach","studentRecord","insertAdjacentHTML","start","end","currentPage","renderPagination","index","dataset","disabled","parseInt","contains"],"version":3,"file":"studentRecord.7b84049e.js.map"}